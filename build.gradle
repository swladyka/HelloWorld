buildscript {
    repositories {
        mavenCentral()
        maven {
            url "https://plugins.gradle.org/m2/"
        }
    }
    dependencies {
        classpath("org.springframework.boot:spring-boot-gradle-plugin:1.4.2.RELEASE")
        classpath("gradle.plugin.com.palantir.gradle.docker:gradle-docker:0.9.1")
        classpath("com.datadoghq:java-dogstatsd-client:2.3")
    }
}

apply plugin: 'java'
apply plugin: 'eclipse'
apply plugin: 'idea'
apply plugin: 'groovy'
apply plugin: 'org.springframework.boot'

jar {
    baseName = 'helloworld'
}

repositories {
    mavenCentral()
}

sourceCompatibility = 1.8
targetCompatibility = 1.8

if (!project.hasProperty("buildId")) {
    ext.buildId = "latest"
}

if (!project.hasProperty("environment")) {
    ext.environment = "development"
}

if (!project.hasProperty("registryUrl")) {
    // default to apollo-nonprod
    ext.registryUrl = "757337298421.dkr.ecr.us-east-1.amazonaws.com"
}

println("BUILD ID: $buildId")

dependencies {
    // mandatory dependencies for using Spock
    compile "org.codehaus.groovy:groovy-all:2.4.10"
    testCompile "org.spockframework:spock-core:1.1-groovy-2.4"

    // optional dependencies for using Spock
    testCompile "org.hamcrest:hamcrest-core:1.3" // only necessary if Hamcrest matchers are used
    testRuntime "net.bytebuddy:byte-buddy:1.6.5"          // allows mocking of classes (in addition to interfaces)
    testRuntime "org.objenesis:objenesis:2.5.1"    // allows mocking of classes without default constructor (together with CGLIB)

    // tag::jetty[]
    compile("org.springframework.boot:spring-boot-starter-web") {
        exclude module: "spring-boot-starter-tomcat"
    }
    compile("org.springframework.boot:spring-boot-starter-jetty")
    // end::jetty[]
    // tag::actuator[]
    compile("org.springframework.boot:spring-boot-starter-actuator")
    // end::actuator[]
    compile group: 'com.datadoghq', name: 'java-dogstatsd-client', version: '2.3'
    testCompile("junit:junit")
}
